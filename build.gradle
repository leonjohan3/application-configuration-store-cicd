/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "io.freefair.lombok" version "8.6"
    id 'jacoco'
    id "pmd"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.skyscreamer:jsonassert:1.5.1'

    implementation 'software.amazon.awscdk:aws-cdk-lib:2.143.0'
    implementation 'software.constructs:constructs:10.3.0'
    implementation 'software.amazon.awssdk:appconfig:2.25.50'
//    implementation ''

    implementation 'commons-cli:commons-cli:1.8.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
//    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.myorg.TryJavaCdkApp'
}

//tasks.named('test') {
    // Use JUnit Platform for unit tests.
//}

jacoco {
    toolVersion = "0.8.12"
//    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

pmd {
    consoleOutput = true
    toolVersion = "7.2.0"
//    rulesMinimumPriority = 5
//    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml", "category/java/codestyle.xml"]
    ruleSetFiles = files("config/pmd/ruleset.xml")
}
