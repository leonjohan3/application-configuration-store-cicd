import com.github.spotbugs.snom.SpotBugsReport

plugins {
    id 'application'
    id "io.freefair.lombok" version "8.6"
    id 'jacoco'
    id "pmd"
    id 'checkstyle'
    id "com.github.spotbugs" version "6.0.15"
    id "org.sonarqube" version "5.0.0.4638"
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'software.amazon.awscdk:aws-cdk-lib:2.143.0'
    implementation 'software.constructs:constructs:10.3.0'

    implementation ('software.amazon.awssdk:appconfig:2.25.50') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    implementation 'commons-cli:commons-cli:1.8.0'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'com.google.guava:guava:33.2.1-jre'

    implementation platform('org.springframework:spring-framework-bom:6.1.8')
//    implementation 'org.springframework:spring-beans'
    implementation 'org.springframework:spring-context'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'org.apache.tomcat.embed:tomcat-embed-el'

    implementation platform('org.springframework.boot:spring-boot-dependencies:3.3.0')
    implementation 'org.springframework.boot:spring-boot-starter-logging'
//    implementation 'org.springframework.boot:spring-boot-starter:3.3.0'
//    implementation 'org.springframework.boot:spring-boot-starter-validation'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.hamcrest:hamcrest'
    testImplementation 'org.skyscreamer:jsonassert'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.springframework:spring-test'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.myorg.AppConfigStoreCdkApp'
}

jacoco {
    toolVersion = "0.8.12"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    systemProperty 'spring.profiles.active', 'test'
}

jacocoTestReport {
    dependsOn test
}

pmd {
    consoleOutput = true
    toolVersion = "7.2.0"
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

checkstyle {
    toolVersion = "10.17.0"
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
//    maxErrors = 1
//    maxWarnings = 1
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
